App.AppDetail=[Flight finder application from Zamek]\n
App.help=-- HELP --
App.helpFooter=End of Help
App.helpHeader=HELP
App.optXML=xml
App.optXMLName=FILENAME
App.optXMLDetails=Name of the XML file
App.optCities=cities
App.optCitiesDetail=Show cities
App.optCitiesSelected=You want to print all cities
App.optAirlines=airlines
App.optAirlinesDetail=Show airlines
App.optAirlinesSelected=You want to print all airlines
App.optFlights=flights
App.optFlightsDetail=Show flights
App.optFlightsSelected=You want to print all flights
App.optSource=source
App.optSourceDetail=Set source 
App.optDestination=destination
App.optDestinationDetail=Set destination 
App.optAirline=airline
App.optAirlineDetail=With airline
App.optAirlineSelected=with %s airline
App.optDefault=d
App.optDefaultDetail=Default task: find path between city of lowest population and city of highest population
App.optDefaultSelected=You selected the default
App.optFindSelected=You selected find route between %s and %s
App.optLongCities=cities
App.optLongDefault=default
App.optLongFind=find
App.outputException=WARNING: Exception encountered trying to write to OutputStream:\n
App.parseException=Encountered exception while parsing using GnuParser:\n
App.usage=-- USAGE --
App.cityNotFound=%s is not exists in the cities database
Data.pathBetween=\nPath between %s and %s is:
Data.pathDetail=\t%s -> %s %d Km, at %s - %s with %s
Data.pathNotFound=Unfortunately cannot find a path between %s and %s
Data.pathTotal=\ntotal distance:%d Km, total times:%s
Flight.hour=hour 
Flight.minutes=minutes
Flight.tostring=%s: %s->%s (%dKm departure at:%s with %s duration) by %s
Flight.hours=hours
Flight.minutes=minutes
